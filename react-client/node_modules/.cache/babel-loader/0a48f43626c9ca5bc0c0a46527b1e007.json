{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adrian/Documents/Uni/master/WiSe-2020/OMM/projekt-neu/OMM_Group825/react-client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport arrowBack from \"./img/arrow_back-black-18dp.svg\";\nimport arrowForward from \"./img/arrow_forward-black-18dp.svg\";\nimport './index.css';\n\nclass InputsText extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTopClick = event => {\n      event.preventDefault();\n      let nam = event.target.value;\n      this.setState({\n        topText: nam\n      });\n    };\n\n    this.handleBottomClick = event => {\n      event.preventDefault();\n      let nam = event.target.value;\n      this.setState({\n        bottomText: nam\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let top = this.state.topText;\n      let bottom = this.state.bottomText;\n      this.props.textSubmitHandle(top, bottom);\n      /* this.props.textSubmitHandle(this.state.bottomText) */\n    };\n\n    this.state = {\n      topText: \"\",\n      bottomText: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-header\",\n        children: \"Write top and bottom caption\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"topForm\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"top caption\",\n          name: \"topText\",\n          onChange: this.handleTopClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"bottomForm\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"bootom caption\",\n          name: \"bottomText\",\n          onChange: this.handleBottomClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass InputsPost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n\n      if (!this.state.name || !this.state.url || !this.state.width || !this.state.height || !this.state.boxCount) {\n        alert(\"You must enter every field in the inputs!\");\n        return;\n      }\n\n      const name = this.state.name;\n      const url = this.state.url;\n      const inputWidth = this.state.width;\n      const inputHeight = this.state.height;\n      const inputBoxCount = this.state.boxCount;\n\n      if (!Number(inputWidth) || !Number(inputHeight) || !Number(inputBoxCount)) {\n        alert(\"You must enter numbers for width, height and box count!\");\n      } else {\n        console.log(this.state);\n        const payload = {\n          name: event.target.elements.name.value,\n          url: event.target.elements.url.value,\n          width: event.target.elements.width.value,\n          height: event.target.elements.height.value,\n          boxCount: event.target.elements.boxCount.value\n        };\n        console.log('sending data ' + JSON.stringify(payload));\n        fetch(`/images/handle`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        }).then(jsonResponse => jsonResponse.json().then(responseObject => {\n          console.log('recieved answer for post request: ' + JSON.stringify(responseObject));\n          alert(JSON.stringify(responseObject.message));\n        }).catch(jsonParseError => {\n          console.error(jsonParseError);\n        })).catch(requestError => {\n          console.error(requestError);\n        });\n      }\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      name: null,\n      url: null,\n      width: null,\n      height: null,\n      boxCount: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-header\",\n        children: \"Post a new picture by existing url\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"postForm\",\n        onSubmit: this.mySubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"name\",\n          name: \"name\",\n          onChange: this.myChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 103\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"url\",\n          name: \"url\",\n          onChange: this.myChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 101\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"width\",\n          name: \"width\",\n          onChange: this.myChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 105\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"height\",\n          name: \"height\",\n          onChange: this.myChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 107\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"box count\",\n          name: \"boxCount\",\n          onChange: this.myChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"postSubmit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass SlideShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pictures: [],\n      currentIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch('/images').then(res => {\n      console.log(res);\n      return res.json();\n    }).then(images => {\n      console.log(images);\n      this.setState({\n        pictures: images.images,\n        // image array is wrapped in image json\n        currentIndex: 0,\n        topText: \"\",\n        bottomText: \"\"\n      });\n    });\n  }\n\n  onClickNext() {\n    const nextIndex = this.state.currentIndex + 1;\n\n    if (nextIndex === this.state.pictures.length) {\n      this.setState({\n        pictures: this.state.pictures,\n        currentIndex: 0\n      });\n    } else {\n      this.setState({\n        pictures: this.state.pictures,\n        currentIndex: nextIndex\n      });\n    }\n  }\n\n  onClickPrevious() {\n    const previousIndex = this.state.currentIndex - 1;\n\n    if (previousIndex < 0) {\n      this.setState({\n        pictures: this.state.pictures,\n        currentIndex: this.state.pictures.length - 1\n      });\n    } else {\n      this.setState({\n        pictures: this.state.pictures,\n        currentIndex: previousIndex\n      });\n    }\n  }\n\n  render() {\n    const currentIndex = this.state.currentIndex;\n    const topText = this.props.topText;\n    const bottomText = this.props.bottomText;\n    let url;\n\n    if (this.state.pictures.length > 0) {\n      url = this.state.pictures[currentIndex].url;\n    } else {\n      url = \"\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrowBack,\n          className: \"backButton\",\n          onClick: () => this.onClickPrevious()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrowForward,\n          className: \"nextButton\",\n          onClick: () => this.onClickNext()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"current Index: \", currentIndex]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topOut\",\n          children: topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottomOut\",\n          children: bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass FileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = event => {\n      console.log(event.target.files[0]);\n      this.setState({\n        selectedFile: event.target.files,\n        loaded: 0\n      });\n      /*           fetch('/upload', { // Your POST endpoint\n                  method: 'POST',\n                  headers: {'Content-Type': 'multipart/form-data'},\n                  body: event.target.files[0] // This is your file object\n                }).then(\n                  response => response.json() // if the response is a JSON object\n                ).then(\n                  success => console.log(success) // Handle the success response object\n                ).catch(\n                  error => console.log(error) // Handle the error response object\n                ); */\n    };\n\n    this.onClickHandler = () => {\n      /* const data = new FormData() \n      data.append('file', this.state.selectedFile) */\n      const data = this.state.selectedFile[0];\n      console.log('data');\n      console.log(data);\n      fetch('/upload', {\n        // Your POST endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        body: data // This is your file object\n\n      }).then(response => response.json() // if the response is a JSON object\n      ).then(success => console.log(success) // Handle the success response object\n      ).catch(error => console.log(error) // Handle the error response object\n      );\n    };\n\n    this.onSubmitHandler = event => {\n      event.preventDefault();\n      const data = this.state.selectedFile;\n      fetch('/images/upload', {\n        // Your POST endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        body: data // This is your file object\n\n      }).then(response => response.json() // if the response is a JSON object\n      ).then(success => console.log(success) // Handle the success response object\n      ).catch(error => console.log(error) // Handle the error response object\n      );\n    };\n\n    this.state = {\n      selectedFile: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      ref: \"uploadForm\",\n      id: \"uploadForm\",\n      onSubmit: this.onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"sampleFile\",\n        onChange: this.onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Upload!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this)\n    /*             <div className=\"file-upload\">\n                    <h2>Upload a file</h2>\n                    <input type=\"file\" name=\"sampleFile\" onChange={this.onChangeHandler}/>\n                    <button type=\"button\" onClick={this.onClickHandler}>Upload</button>\n                </div> */\n    ;\n  }\n\n} // ========================================\n\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTextSubmit = (top, bottom) => {\n      console.log(top);\n      console.log(bottom);\n      this.setState({\n        topText: top,\n        bottomText: bottom\n      });\n    };\n\n    this.state = {\n      topText: \"\",\n      bottomText: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(InputsText, {\n          textSubmitHandle: this.handleTextSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputsPost, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-show-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pictures\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SlideShow, {\n          topText: this.state.topText,\n          bottomText: this.state.bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 339,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/home/adrian/Documents/Uni/master/WiSe-2020/OMM/projekt-neu/OMM_Group825/react-client/src/index.js"],"names":["React","ReactDOM","InputsText","Component","constructor","props","handleTopClick","event","preventDefault","nam","target","value","setState","topText","handleBottomClick","bottomText","handleSubmit","top","state","bottom","textSubmitHandle","render","InputsPost","mySubmitHandler","name","url","width","height","boxCount","alert","inputWidth","inputHeight","inputBoxCount","Number","console","log","payload","elements","JSON","stringify","fetch","method","headers","body","then","jsonResponse","json","responseObject","message","catch","jsonParseError","error","requestError","myChangeHandler","val","SlideShow","pictures","currentIndex","componentDidMount","res","images","onClickNext","nextIndex","length","onClickPrevious","previousIndex","arrowBack","arrowForward","FileUpload","onChangeHandler","files","selectedFile","loaded","onClickHandler","data","response","success","onSubmitHandler","Home","handleTextSubmit","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAGA,OAAO,aAAP;;AAGA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,cARmB,GAQDC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAvB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEJ;AAAV,OAAd;AACH,KAZkB;;AAAA,SAcnBK,iBAdmB,GAcEP,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAvB;AACA,WAAKC,QAAL,CAAc;AAACG,QAAAA,UAAU,EAAEN;AAAb,OAAd;AACH,KAlBkB;;AAAA,SAoBnBO,YApBmB,GAoBHT,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIS,GAAG,GAAG,KAAKC,KAAL,CAAWL,OAArB;AAEA,UAAIM,MAAM,GAAG,KAAKD,KAAL,CAAWH,UAAxB;AAEA,WAAKV,KAAL,CAAWe,gBAAX,CAA4BH,GAA5B,EAAiCE,MAAjC;AACA;AACH,KA5BkB;;AAEf,SAAKD,KAAL,GAAa;AACTL,MAAAA,OAAO,EAAE,EADA;AAETE,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAwBDM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,EAAE,EAAC,SAAT;AAAmB,QAAA,QAAQ,EAAE,KAAKL,YAAlC;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,aAA/B;AAA6C,UAAA,IAAI,EAAC,SAAlD;AAA4D,UAAA,QAAQ,EAAE,KAAKV;AAA3E;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,QAAQ,EAAE,KAAKU,YAArC;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,gBAA/B;AAAgD,UAAA,IAAI,EAAC,YAArD;AAAkE,UAAA,QAAQ,EAAE,KAAKF;AAAjF;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AA7CoC;;AAiDzC,MAAMQ,UAAN,SAAyBtB,KAAK,CAACG,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWjBkB,eAXiB,GAWEhB,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAK,CAAC,KAAKU,KAAL,CAAWM,IAAZ,IAAoB,CAAC,KAAKN,KAAL,CAAWO,GAAhC,IAAuC,CAAC,KAAKP,KAAL,CAAWQ,KAAnD,IAA4D,CAAC,KAAKR,KAAL,CAAWS,MAAxE,IAAkF,CAAC,KAAKT,KAAL,CAAWU,QAAnG,EAA8G;AAC1GC,QAAAA,KAAK,CAAC,2CAAD,CAAL;AACA;AACH;;AACD,YAAML,IAAI,GAAG,KAAKN,KAAL,CAAWM,IAAxB;AACA,YAAMC,GAAG,GAAG,KAAKP,KAAL,CAAWO,GAAvB;AACA,YAAMK,UAAU,GAAG,KAAKZ,KAAL,CAAWQ,KAA9B;AACA,YAAMK,WAAW,GAAG,KAAKb,KAAL,CAAWS,MAA/B;AACA,YAAMK,aAAa,GAAG,KAAKd,KAAL,CAAWU,QAAjC;;AACA,UAAK,CAACK,MAAM,CAACH,UAAD,CAAP,IAAuB,CAACG,MAAM,CAACF,WAAD,CAA9B,IAA+C,CAACE,MAAM,CAACD,aAAD,CAA3D,EAA6E;AAC3EH,QAAAA,KAAK,CAAC,yDAAD,CAAL;AACD,OAFD,MAEO;AACHK,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;AACA,cAAMkB,OAAO,GAAG;AACZZ,UAAAA,IAAI,EAAEjB,KAAK,CAACG,MAAN,CAAa2B,QAAb,CAAsBb,IAAtB,CAA2Bb,KADrB;AAEZc,UAAAA,GAAG,EAAElB,KAAK,CAACG,MAAN,CAAa2B,QAAb,CAAsBZ,GAAtB,CAA0Bd,KAFnB;AAGZe,UAAAA,KAAK,EAAEnB,KAAK,CAACG,MAAN,CAAa2B,QAAb,CAAsBX,KAAtB,CAA4Bf,KAHvB;AAIZgB,UAAAA,MAAM,EAAEpB,KAAK,CAACG,MAAN,CAAa2B,QAAb,CAAsBV,MAAtB,CAA6BhB,KAJzB;AAKZiB,UAAAA,QAAQ,EAAErB,KAAK,CAACG,MAAN,CAAa2B,QAAb,CAAsBT,QAAtB,CAA+BjB;AAL7B,SAAhB;AAQAuB,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBG,IAAI,CAACC,SAAL,CAAgBH,OAAhB,CAA9B;AAEAI,QAAAA,KAAK,CAAE,gBAAF,EACL;AACEC,UAAAA,MAAM,EAAE,MADV;AAEEC,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB,WAFX;AAGEC,UAAAA,IAAI,EAAEL,IAAI,CAACC,SAAL,CAAgBH,OAAhB;AAHR,SADK,CAAL,CAMGQ,IANH,CAMQC,YAAY,IAAIA,YAAY,CAACC,IAAb,GACrBF,IADqB,CAChBG,cAAc,IAAI;AACpBb,UAAAA,OAAO,CAACC,GAAR,CAAY,uCAAuCG,IAAI,CAACC,SAAL,CAAgBQ,cAAhB,CAAnD;AACAlB,UAAAA,KAAK,CAACS,IAAI,CAACC,SAAL,CAAgBQ,cAAc,CAACC,OAA/B,CAAD,CAAL;AACD,SAJmB,EAKnBC,KALmB,CAKbC,cAAc,IAAI;AACvBhB,UAAAA,OAAO,CAACiB,KAAR,CAAcD,cAAd;AACD,SAPmB,CANxB,EAcID,KAdJ,CAcUG,YAAY,IAAI;AACtBlB,UAAAA,OAAO,CAACiB,KAAR,CAAcC,YAAd;AACD,SAhBH;AAiBH;AACF,KAtDgB;;AAAA,SAwDjBC,eAxDiB,GAwDE9C,KAAD,IAAW;AAC3B,UAAIE,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAac,IAAvB;AACA,UAAI8B,GAAG,GAAG/C,KAAK,CAACG,MAAN,CAAaC,KAAvB;AACA,WAAKC,QAAL,CAAc;AAAC,SAACH,GAAD,GAAO6C;AAAR,OAAd;AACD,KA5DgB;;AAEf,SAAKpC,KAAL,GAAa;AACXM,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,GAAG,EAAE,IAFM;AAGXC,MAAAA,KAAK,EAAE,IAHI;AAIXC,MAAAA,MAAM,EAAE,IAJG;AAKXC,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOD;;AAqDHP,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,QAAQ,EAAE,KAAKE,eAA1C;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,MAA/B;AAAsC,UAAA,IAAI,EAAC,MAA3C;AAAkD,UAAA,QAAQ,EAAE,KAAK8B;AAAjE;AAAA;AAAA;AAAA;AAAA,gBADF,oBACsF;AAAA;AAAA;AAAA;AAAA,gBADtF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,KAA/B;AAAqC,UAAA,IAAI,EAAC,KAA1C;AAAgD,UAAA,QAAQ,EAAE,KAAKA;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAFF,oBAEoF;AAAA;AAAA;AAAA;AAAA,gBAFpF,eAGE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,OAA/B;AAAuC,UAAA,IAAI,EAAC,OAA5C;AAAoD,UAAA,QAAQ,EAAE,KAAKA;AAAnE;AAAA;AAAA;AAAA;AAAA,gBAHF,oBAGwF;AAAA;AAAA;AAAA;AAAA,gBAHxF,eAIE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,QAA/B;AAAwC,UAAA,IAAI,EAAC,QAA7C;AAAsD,UAAA,QAAQ,EAAE,KAAKA;AAArE;AAAA;AAAA;AAAA;AAAA,gBAJF,oBAI0F;AAAA;AAAA;AAAA;AAAA,gBAJ1F,eAKE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,WAA/B;AAA2C,UAAA,IAAI,EAAC,UAAhD;AAA2D,UAAA,QAAQ,EAAE,KAAKA;AAA1E;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaD;;AA7EkC;;AAiFzC,MAAME,SAAN,SAAwBvD,KAAK,CAACG,SAA9B,CAAwC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKa,KAAL,GAAa;AACTsC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAG;AACflB,IAAAA,KAAK,CAAC,SAAD,CAAL,CACKI,IADL,CACUe,GAAG,IAAI;AACTzB,MAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;AACA,aAAOA,GAAG,CAACb,IAAJ,EAAP;AACF,KAJN,EAKKF,IALL,CAKUgB,MAAM,IAAI;AACZ1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,MAAZ;AACA,WAAKhD,QAAL,CAAc;AACV4C,QAAAA,QAAQ,EAAEI,MAAM,CAACA,MADP;AACgB;AAC1BH,QAAAA,YAAY,EAAE,CAFJ;AAGV5C,QAAAA,OAAO,EAAE,EAHC;AAIVE,QAAAA,UAAU,EAAE;AAJF,OAAd;AAMF,KAbN;AAcH;;AAED8C,EAAAA,WAAW,GAAG;AACV,UAAMC,SAAS,GAAG,KAAK5C,KAAL,CAAWuC,YAAX,GAA0B,CAA5C;;AACA,QAAGK,SAAS,KAAK,KAAK5C,KAAL,CAAWsC,QAAX,CAAoBO,MAArC,EAA6C;AACzC,WAAKnD,QAAL,CAAc;AACV4C,QAAAA,QAAQ,EAAE,KAAKtC,KAAL,CAAWsC,QADX;AAEVC,QAAAA,YAAY,EAAE;AAFJ,OAAd;AAGH,KAJD,MAIO;AACH,WAAK7C,QAAL,CAAc;AACV4C,QAAAA,QAAQ,EAAE,KAAKtC,KAAL,CAAWsC,QADX;AAEVC,QAAAA,YAAY,EAAEK;AAFJ,OAAd;AAIH;AACJ;;AAEDE,EAAAA,eAAe,GAAG;AACd,UAAMC,aAAa,GAAG,KAAK/C,KAAL,CAAWuC,YAAX,GAA0B,CAAhD;;AACA,QAAGQ,aAAa,GAAG,CAAnB,EAAsB;AAClB,WAAKrD,QAAL,CAAc;AACV4C,QAAAA,QAAQ,EAAE,KAAKtC,KAAL,CAAWsC,QADX;AAEVC,QAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWsC,QAAX,CAAoBO,MAApB,GAA6B;AAFjC,OAAd;AAGH,KAJD,MAIO;AACH,WAAKnD,QAAL,CAAc;AACV4C,QAAAA,QAAQ,EAAE,KAAKtC,KAAL,CAAWsC,QADX;AAEVC,QAAAA,YAAY,EAAEQ;AAFJ,OAAd;AAIH;AACJ;;AAED5C,EAAAA,MAAM,GAAG;AACL,UAAMoC,YAAY,GAAG,KAAKvC,KAAL,CAAWuC,YAAhC;AACA,UAAM5C,OAAO,GAAG,KAAKR,KAAL,CAAWQ,OAA3B;AACA,UAAME,UAAU,GAAG,KAAKV,KAAL,CAAWU,UAA9B;AACA,QAAIU,GAAJ;;AACA,QAAG,KAAKP,KAAL,CAAWsC,QAAX,CAAoBO,MAApB,GAA6B,CAAhC,EAAmC;AAC/BtC,MAAAA,GAAG,GAAG,KAAKP,KAAL,CAAWsC,QAAX,CAAoBC,YAApB,EAAkChC,GAAxC;AACH,KAFD,MAEO;AACHA,MAAAA,GAAG,GAAG,EAAN;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEyC,SAAV;AAAqB,UAAA,SAAS,EAAC,YAA/B;AAA4C,UAAA,OAAO,EAAE,MAAM,KAAKF,eAAL;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,GAAG,EAAEG,YAAV;AAAwB,UAAA,SAAS,EAAC,YAAlC;AAA+C,UAAA,OAAO,EAAE,MAAM,KAAKN,WAAL;AAA9D;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,+BAAK;AAAA,wCAAmBJ,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cANJ,eAQI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEhC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBAAyBZ;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBAA4BE;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAhFmC;;AAmFxC,MAAMqD,UAAN,SAAyBpE,KAAK,CAACG,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBgE,eAPmB,GAOA9D,KAAD,IAAW;AACzB2B,MAAAA,OAAO,CAACC,GAAR,CAAY5B,KAAK,CAACG,MAAN,CAAa4D,KAAb,CAAmB,CAAnB,CAAZ;AACA,WAAK1D,QAAL,CAAc;AACV2D,QAAAA,YAAY,EAAEhE,KAAK,CAACG,MAAN,CAAa4D,KADjB;AAEVE,QAAAA,MAAM,EAAE;AAFE,OAAd;AAIR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,KAxBkB;;AAAA,SA0BnBC,cA1BmB,GA0BF,MAAM;AACnB;AACR;AACQ,YAAMC,IAAI,GAAG,KAAKxD,KAAL,CAAWqD,YAAX,CAAwB,CAAxB,CAAb;AACArC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYuC,IAAZ;AACAlC,MAAAA,KAAK,CAAC,SAAD,EAAY;AAAE;AACjBC,QAAAA,MAAM,EAAE,MADO;AAEfC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFM;AAGfC,QAAAA,IAAI,EAAE+B,IAHS,CAGJ;;AAHI,OAAZ,CAAL,CAIG9B,IAJH,CAKE+B,QAAQ,IAAIA,QAAQ,CAAC7B,IAAT,EALd,CAK8B;AAL9B,QAMEF,IANF,CAOEgC,OAAO,IAAI1C,OAAO,CAACC,GAAR,CAAYyC,OAAZ,CAPb,CAOkC;AAPlC,QAQE3B,KARF,CASEE,KAAK,IAAIjB,OAAO,CAACC,GAAR,CAAYgB,KAAZ,CATX,CAS8B;AAT9B;AAWH,KA3CkB;;AAAA,SA6CnB0B,eA7CmB,GA6CAtE,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMkE,IAAI,GAAG,KAAKxD,KAAL,CAAWqD,YAAxB;AACA/B,MAAAA,KAAK,CAAC,gBAAD,EAAmB;AAAE;AACxBC,QAAAA,MAAM,EAAE,MADc;AAEtBC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFa;AAGtBC,QAAAA,IAAI,EAAE+B,IAHgB,CAGX;;AAHW,OAAnB,CAAL,CAIG9B,IAJH,CAKE+B,QAAQ,IAAIA,QAAQ,CAAC7B,IAAT,EALd,CAK8B;AAL9B,QAMEF,IANF,CAOEgC,OAAO,IAAI1C,OAAO,CAACC,GAAR,CAAYyC,OAAZ,CAPb,CAOkC;AAPlC,QAQE3B,KARF,CASEE,KAAK,IAAIjB,OAAO,CAACC,GAAR,CAAYgB,KAAZ,CATX,CAS8B;AAT9B;AAWH,KA3DkB;;AAEf,SAAKjC,KAAL,GAAa;AACTqD,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAwDDlD,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,GAAG,EAAC,YAAV;AACI,MAAA,EAAE,EAAC,YADP;AAEI,MAAA,QAAQ,EAAE,KAAKwD,eAFnB;AAAA,8BAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,YAAxB;AAAqC,QAAA,QAAQ,EAAE,KAAKR;AAApD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAMZ;AACA;AACA;AACA;AACA;AAXQ;AAaH;;AA5EoC,C,CAgFzC;;;AACA,MAAMS,IAAN,SAAmB9E,KAAK,CAACG,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlB0E,gBARkB,GAQC,CAAC9D,GAAD,EAAME,MAAN,KAAiB;AAChCe,MAAAA,OAAO,CAACC,GAAR,CAAYlB,GAAZ;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACA,WAAKP,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAEI,GADC;AAEVF,QAAAA,UAAU,EAAEI;AAFF,OAAd;AAIH,KAfiB;;AAEd,SAAKD,KAAL,GAAa;AACTL,MAAAA,OAAO,EAAE,EADA;AAETE,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAWDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,gBAAgB,EAAE,KAAK0D;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AAAW,UAAA,OAAO,EAAE,KAAK7D,KAAL,CAAWL,OAA/B;AAAwC,UAAA,UAAU,EAAE,KAAKK,KAAL,CAAWH;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAhC8B;;AAoCnCd,QAAQ,CAACoB,MAAT,eACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEE2D,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport arrowBack from './img/arrow_back-black-18dp.svg';\nimport arrowForward from './img/arrow_forward-black-18dp.svg';\nimport './index.css';\n\n\nclass InputsText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n        };\n    }\n\n    handleTopClick = (event) => {\n        event.preventDefault();\n        let nam = event.target.value;\n        this.setState({topText: nam});\n    }\n\n    handleBottomClick = (event) => {\n        event.preventDefault();\n        let nam = event.target.value;\n        this.setState({bottomText: nam});\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let top = this.state.topText;\n        \n        let bottom = this.state.bottomText;\n        \n        this.props.textSubmitHandle(top, bottom);\n        /* this.props.textSubmitHandle(this.state.bottomText) */\n    }\n\n    render() {\n        return(\n            <div className=\"inputs-text\">\n                <h2 className=\"form-header\">Write top and bottom caption</h2>\n                <form id=\"topForm\" onSubmit={this.handleSubmit}>\n                  <input type=\"text\" placeholder=\"top caption\" name=\"topText\" onChange={this.handleTopClick}/>\n                  <button type=\"submit\">Submit</button>\n                </form>    \n                <form id=\"bottomForm\" onSubmit={this.handleSubmit}>\n                  <input type=\"text\" placeholder=\"bootom caption\" name=\"bottomText\" onChange={this.handleBottomClick}/>\n                  <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nclass InputsPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          name: null,\n          url: null,\n          width: null,\n          height: null,\n          boxCount: null,\n        };\n      }\n\n      mySubmitHandler = (event) => {\n        event.preventDefault();\n        if ( !this.state.name || !this.state.url || !this.state.width || !this.state.height || !this.state.boxCount ) {\n            alert(\"You must enter every field in the inputs!\");\n            return;\n        }\n        const name = this.state.name;\n        const url = this.state.url;\n        const inputWidth = this.state.width;\n        const inputHeight = this.state.height;\n        const inputBoxCount = this.state.boxCount;\n        if ( !Number(inputWidth) || !Number(inputHeight) || !Number(inputBoxCount) ) {\n          alert(\"You must enter numbers for width, height and box count!\");\n        } else {\n            console.log(this.state)\n            const payload = {\n                name: event.target.elements.name.value,\n                url: event.target.elements.url.value,\n                width: event.target.elements.width.value,\n                height: event.target.elements.height.value,\n                boxCount: event.target.elements.boxCount.value\n            };\n\n            console.log('sending data ' + JSON.stringify( payload ));\n\n            fetch(`/images/handle`, \n            {\n              method: 'POST',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify( payload ),\n            })\n              .then(jsonResponse => jsonResponse.json()\n              .then(responseObject => {\n                  console.log('recieved answer for post request: ' + JSON.stringify( responseObject ));\n                  alert(JSON.stringify( responseObject.message ))\n                })\n                .catch(jsonParseError => {\n                  console.error(jsonParseError);\n                })\n              ).catch(requestError => {\n                console.error(requestError);\n              });           \n        }\n      }\n\n      myChangeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n      }\n\n    render() {\n        return (\n            <div className=\"inputs-post\"> \n                <h2 className=\"form-header\">Post a new picture by existing url</h2>\n                <form className=\"postForm\" onSubmit={this.mySubmitHandler}>\n                  <input type=\"text\" placeholder=\"name\" name=\"name\" onChange={this.myChangeHandler}/> <br/>\n                  <input type=\"text\" placeholder=\"url\" name=\"url\" onChange={this.myChangeHandler}/> <br/>\n                  <input type=\"text\" placeholder=\"width\" name=\"width\" onChange={this.myChangeHandler}/> <br/>\n                  <input type=\"text\" placeholder=\"height\" name=\"height\" onChange={this.myChangeHandler}/> <br/>\n                  <input type=\"text\" placeholder=\"box count\" name=\"boxCount\" onChange={this.myChangeHandler}/>\n                  <button type=\"submit\" className=\"postSubmit\">Submit</button>\n                </form>\n            </div>\n        );\n      }\n}\n\n\nclass SlideShow extends React.Component {\n   constructor(props){\n       super(props);\n       this.state = {\n           pictures: [],\n           currentIndex: 0,\n        };\n   }\n   componentDidMount() {\n        fetch('/images')\n            .then(res => {\n                console.log(res);\n                return res.json()\n             })\n            .then(images => { \n                console.log(images);\n                this.setState({ \n                    pictures: images.images,  // image array is wrapped in image json\n                    currentIndex: 0,\n                    topText: \"\",\n                    bottomText: \"\",\n                })\n             });\n    }\n\n    onClickNext() {\n        const nextIndex = this.state.currentIndex + 1;\n        if(nextIndex === this.state.pictures.length) {\n            this.setState({ \n                pictures: this.state.pictures,\n                currentIndex: 0 })    \n        } else {\n            this.setState({\n                pictures: this.state.pictures,\n                currentIndex: nextIndex \n            })\n        }\n    }\n\n    onClickPrevious() {\n        const previousIndex = this.state.currentIndex - 1;\n        if(previousIndex < 0) {\n            this.setState({ \n                pictures: this.state.pictures,\n                currentIndex: this.state.pictures.length - 1 })    \n        } else {\n            this.setState({\n                pictures: this.state.pictures,\n                currentIndex: previousIndex\n            })\n        }\n    }\n\n    render() {\n        const currentIndex = this.state.currentIndex;\n        const topText = this.props.topText;\n        const bottomText = this.props.bottomText;\n        let url;\n        if(this.state.pictures.length > 0) {\n            url = this.state.pictures[currentIndex].url;\n        } else {\n            url = \"\"\n        }\n        return (\n            <div className=\"main\">\n                <div className=\"navigation-buttons\">\n                  <img src={arrowBack} className=\"backButton\" onClick={() => this.onClickPrevious()}></img>\n                  <img src={arrowForward} className=\"nextButton\" onClick={() => this.onClickNext()}></img>\n                </div>\n\n                <div><p>current Index: {currentIndex}</p></div>\n\n                <div className=\"image-wrapper\">\n                    <img src={url} />\n                    <div className=\"topOut\">{topText}</div>\n                    <div className=\"bottomOut\">{bottomText}</div>   \n                </div>\n\n            </div>\n        );\n    }\n}\n\nclass FileUpload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedFile: null,\n        }\n    }\n\n    onChangeHandler = (event) => {\n        console.log(event.target.files[0])\n        this.setState({\n            selectedFile: event.target.files,\n            loaded: 0,\n          })\n/*           fetch('/upload', { // Your POST endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'multipart/form-data'},\n            body: event.target.files[0] // This is your file object\n          }).then(\n            response => response.json() // if the response is a JSON object\n          ).then(\n            success => console.log(success) // Handle the success response object\n          ).catch(\n            error => console.log(error) // Handle the error response object\n          ); */\n    }\n\n    onClickHandler = () => {\n        /* const data = new FormData() \n        data.append('file', this.state.selectedFile) */\n        const data = this.state.selectedFile[0];\n        console.log('data');\n        console.log(data);\n        fetch('/upload', { // Your POST endpoint\n          method: 'POST',\n          headers: {'Content-Type': 'multipart/form-data'},\n          body: data // This is your file object\n        }).then(\n          response => response.json() // if the response is a JSON object\n        ).then(\n          success => console.log(success) // Handle the success response object\n        ).catch(\n          error => console.log(error) // Handle the error response object\n        );\n    }\n\n    onSubmitHandler = (event) => {\n        event.preventDefault();\n        const data = this.state.selectedFile;\n        fetch('/images/upload', { // Your POST endpoint\n          method: 'POST',\n          headers: {'Content-Type': 'multipart/form-data'},\n          body: data // This is your file object\n        }).then(\n          response => response.json() // if the response is a JSON object\n        ).then(\n          success => console.log(success) // Handle the success response object\n        ).catch(\n          error => console.log(error) // Handle the error response object\n        );\n    }\n\n    render() {\n        return(\n            <form ref='uploadForm' \n                id='uploadForm' \n                onSubmit={this.onSubmitHandler}>\n                <input type=\"file\" name=\"sampleFile\" onChange={this.onChangeHandler} />\n                <input type='submit' value='Upload!' />\n            </form>     \n/*             <div className=\"file-upload\">\n                <h2>Upload a file</h2>\n                <input type=\"file\" name=\"sampleFile\" onChange={this.onChangeHandler}/>\n                <button type=\"button\" onClick={this.onClickHandler}>Upload</button>\n            </div> */\n        )\n    }\n    \n}\n\n// ========================================\nclass Home extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n         };\n    }\n\n    handleTextSubmit = (top, bottom) => {\n        console.log(top);\n        console.log(bottom);\n        this.setState({\n            topText: top,\n            bottomText: bottom\n        });\n    }\n\n    render() {\n      return (\n        <div className=\"home\">\n            <div className=\"input-section\">\n                <InputsText textSubmitHandle={this.handleTextSubmit}/>\n                <InputsPost/>\n                <FileUpload/>\n            </div>\n            <div className=\"slide-show-section\">\n                <h2>Pictures</h2>\n                <SlideShow topText={this.state.topText} bottomText={this.state.bottomText}/>\n            </div>\n        </div>\n      );\n    }\n}\n\n  \nReactDOM.render(\n  <Home />,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}