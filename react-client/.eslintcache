[{"/home/adrian/Documents/Uni/master/WiSe-2020/OMM/projekt-neu/OMM_Group825/react-client/src/index.js":"1"},{"size":9674,"mtime":1609853569252,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1gvwtr8","/home/adrian/Documents/Uni/master/WiSe-2020/OMM/projekt-neu/OMM_Group825/react-client/src/index.js",["7","8","9","10","11"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport arrowBack from './img/arrow_back-black-18dp.svg';\nimport arrowForward from './img/arrow_forward-black-18dp.svg';\nimport './index.css';\n\n\n// Inputs for the top and bottom texts\nclass InputsText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n        };\n    }\n\n    handleTopClick = (event) => {\n        event.preventDefault();\n        let nam = event.target.value;\n        this.setState({topText: nam});\n    }\n\n    handleBottomClick = (event) => {\n        event.preventDefault();\n        let nam = event.target.value;\n        this.setState({bottomText: nam});\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let top = this.state.topText;\n        \n        let bottom = this.state.bottomText;\n        \n        this.props.textSubmitHandle(top, bottom);\n    }\n\n    render() {\n        return(\n            <div className=\"inputs-text\">\n                <h2 className=\"form-header\">Write top and bottom caption</h2>\n                <form id=\"topForm\" onSubmit={this.handleSubmit}>\n                  <input type=\"text\" placeholder=\"top caption\" name=\"topText\" onChange={this.handleTopClick}/>\n                  <button type=\"submit\">Submit</button>\n                </form>    \n                <form id=\"bottomForm\" onSubmit={this.handleSubmit}>\n                  <input type=\"text\" placeholder=\"bootom caption\" name=\"bottomText\" onChange={this.handleBottomClick}/>\n                  <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n// inputs for the url post feature\nclass InputsPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          name: null,\n          url: null,\n          width: null,\n          height: null,\n          boxCount: null,\n        };\n      }\n\n      mySubmitHandler = (event) => {\n        event.preventDefault();\n        if ( !this.state.name || !this.state.url || !this.state.width || !this.state.height || !this.state.boxCount ) {\n            alert(\"You must enter every field in the inputs!\");\n            return;\n        }\n        const name = this.state.name;\n        const url = this.state.url;\n        const inputWidth = this.state.width;\n        const inputHeight = this.state.height;\n        const inputBoxCount = this.state.boxCount;\n        if ( !Number(inputWidth) || !Number(inputHeight) || !Number(inputBoxCount) ) {\n          alert(\"You must enter numbers for width, height and box count!\");\n        } else {\n            console.log(this.state)\n            const payload = {\n                name: event.target.elements.name.value,\n                url: event.target.elements.url.value,\n                width: event.target.elements.width.value,\n                height: event.target.elements.height.value,\n                boxCount: event.target.elements.boxCount.value\n            };\n\n            console.log('sending data ' + JSON.stringify( payload ));\n\n            fetch(`/images/handle`, \n            {\n              method: 'POST',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify( payload ),\n            })\n              .then(jsonResponse => jsonResponse.json()\n              .then(responseObject => {\n                  console.log('recieved answer for post request: ' + JSON.stringify( responseObject ));\n                  alert(JSON.stringify( responseObject.message ))\n                })\n                .catch(jsonParseError => {\n                  console.error(jsonParseError);\n                })\n              ).catch(requestError => {\n                console.error(requestError);\n              });           \n        }\n      }\n\n      myChangeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n      }\n\n    render() {\n        return (\n            <div className=\"inputs-post\"> \n                <h2 className=\"form-header\">Post a new picture by existing url</h2>\n                <form className=\"postForm\" onSubmit={this.mySubmitHandler}>\n                  <input type=\"text\" placeholder=\"name\" name=\"name\" onChange={this.myChangeHandler}/> <br/>\n                  <input type=\"text\" placeholder=\"url\" name=\"url\" onChange={this.myChangeHandler}/> <br/>\n                  <input type=\"text\" placeholder=\"width\" name=\"width\" onChange={this.myChangeHandler}/> <br/>\n                  <input type=\"text\" placeholder=\"height\" name=\"height\" onChange={this.myChangeHandler}/> <br/>\n                  <input type=\"text\" placeholder=\"box count\" name=\"boxCount\" onChange={this.myChangeHandler}/>\n                  <button type=\"submit\" className=\"postSubmit\">Submit</button>\n                </form>\n            </div>\n        );\n      }\n}\n\n\n// slide show for existing memes\nclass SlideShow extends React.Component {\n   constructor(props){\n       super(props);\n       this.state = {\n           pictures: [],\n           currentIndex: 0,\n        };\n   }\n   componentDidMount() {\n        fetch('/images')\n            .then(res => {\n                console.log(res);\n                return res.json()\n             })\n            .then(images => { \n                console.log(images);\n                this.setState({ \n                    pictures: images.images,  // image array is wrapped in image json\n                    currentIndex: 0,\n                    topText: \"\",\n                    bottomText: \"\",\n                })\n             });\n    }\n\n    onClickNext() {\n        const nextIndex = this.state.currentIndex + 1;\n        if(nextIndex === this.state.pictures.length) {\n            this.setState({ \n                pictures: this.state.pictures,\n                currentIndex: 0 })    \n        } else {\n            this.setState({\n                pictures: this.state.pictures,\n                currentIndex: nextIndex \n            })\n        }\n    }\n\n    onClickPrevious() {\n        const previousIndex = this.state.currentIndex - 1;\n        if(previousIndex < 0) {\n            this.setState({ \n                pictures: this.state.pictures,\n                currentIndex: this.state.pictures.length - 1 })    \n        } else {\n            this.setState({\n                pictures: this.state.pictures,\n                currentIndex: previousIndex\n            })\n        }\n    }\n\n    render() {\n        const currentIndex = this.state.currentIndex;\n        const topText = this.props.topText;\n        const bottomText = this.props.bottomText;\n        let url;\n        if(this.state.pictures.length > 0) {\n            url = this.state.pictures[currentIndex].url;\n        } else {\n            url = \"\"\n        }\n        return (\n            <div className=\"main\">\n                <div className=\"navigation-buttons\">\n                  <img src={arrowBack} className=\"backButton\" onClick={() => this.onClickPrevious()}></img>\n                  <img src={arrowForward} className=\"nextButton\" onClick={() => this.onClickNext()}></img>\n                </div>\n\n                <div><p>current Index: {currentIndex}</p></div>\n\n                <div className=\"image-wrapper\">\n                    <img src={url} />\n                    <div className=\"topOut\">{topText}</div>\n                    <div className=\"bottomOut\">{bottomText}</div>   \n                </div>\n\n            </div>\n        );\n    }\n}\n\n\n// user upload, file gets saved on local file system\nclass FileUpload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedFile: null,\n        }\n    }\n\n    onChangeHandler = (event) => {\n        console.log(event.target.files[0])\n        this.setState({\n            selectedFile: event.target.files[0],\n            loaded: 0,\n          })\n    }\n\n    onClickHandler = () => {\n        const file = this.state.selectedFile;\n        const formData = new FormData();\n        formData.append(\"userUploadFile\", file);\n      \n        axios.post(\"http://localhost:3000/images/upload\", formData,{headers:{\"Content-Type\" : 'multipart/form-data'}})\n        .then((res) => {\n            alert(res.data.message);\n          })\n          .catch((err) => alert(\"File Upload Error\"));\n      \n          }\n\n    render() {\n        return(   \n            <div className=\"file-upload\">\n                <h2>Upload a file</h2>\n                <input type=\"file\" name=\"sampleFile\" onChange={this.onChangeHandler}/>\n                <button type=\"button\" onClick={this.onClickHandler}>Upload</button>\n            </div>\n        )\n    }\n    \n}\n\n// ========================================\n// overall class to handle everything\nclass Home extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n         };\n    }\n\n    handleTextSubmit = (top, bottom) => {\n        console.log(top);\n        console.log(bottom);\n        this.setState({\n            topText: top,\n            bottomText: bottom\n        });\n    }\n\n    render() {\n      return (\n        <div className=\"home\">\n            <div className=\"input-section\">\n                <InputsText textSubmitHandle={this.handleTextSubmit}/>\n                <InputsPost/>\n                <FileUpload/>\n            </div>\n            <div className=\"slide-show-section\">\n                <h2>Pictures</h2>\n                <SlideShow topText={this.state.topText} bottomText={this.state.bottomText}/>\n            </div>\n        </div>\n      );\n    }\n}\n\n  \nReactDOM.render(\n  <Home />,\n  document.getElementById('root')\n);",{"ruleId":"12","severity":1,"message":"13","line":76,"column":15,"nodeType":"14","messageId":"15","endLine":76,"endColumn":19},{"ruleId":"12","severity":1,"message":"16","line":77,"column":15,"nodeType":"14","messageId":"15","endLine":77,"endColumn":18},{"ruleId":"17","severity":1,"message":"18","line":206,"column":19,"nodeType":"19","endLine":206,"endColumn":102},{"ruleId":"17","severity":1,"message":"18","line":207,"column":19,"nodeType":"19","endLine":207,"endColumn":101},{"ruleId":"17","severity":1,"message":"18","line":213,"column":21,"nodeType":"19","endLine":213,"endColumn":38},"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]